import java.util.*;

class Test
{

static int Prec(char ch)
{
switch (ch)
{
case '+':
case '-':
return 1;

case '*':
case '/':
return 2;

case '^':
return 3;
}
return -1;
}

static String infixToPostfix(String exp)
{
String result = new String(""); //a+b*c
Stack<Character> stack = new Stack<>();
for (int i = 0; i<exp.length(); ++i)
{
char c = exp.charAt(i); // c---> a 1 2
if (Character.isLetterOrDigit(c)) // c ---> a
result += c;
else if (c == '(')
stack.push(c); //
else if (c == ')')
{
while (!stack.isEmpty() &&
stack.peek() != '(')
// result+=stack.peek();
// stack.pop();
result+= stack.pop();
}
else // + / - *
{ // * < +
while (!stack.isEmpty() && Prec(c)
<= Prec(stack.peek())) // +
{
//result += stack.peek();stack.pop();
result +=stack.pop(); // ab *
}
stack.push(c); //* +
}

}

// pop all the operators from the stack
while (!stack.isEmpty()){
if(stack.peek() == '(')
return "Invalid Expression";
result += stack.pop();
}
return result;
}


public static void main(String[] args)
{
String exp=new String();
Scanner sc=new Scanner(System.in);
exp=sc.next();
System.out.println(infixToPostfix(exp));
}
}
